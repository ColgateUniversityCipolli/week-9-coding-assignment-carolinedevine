#####################################
# Part B: Maximum Likelihood (Log-Normal)
#####################################
lllognormal <- function(par, data, neg=F){
mu <- par[1]
sigma <- par[2]
ll <- sum(log(dlnorm(x=data, meanlog = mu, sdlog = =sigma)), na.rm=T)
#####################################
# Part B: Maximum Likelihood (Log-Normal)
#####################################
lllognormal <- function(par, data, neg=F){
mu <- par[1]
sigma <- par[2]
ll <- sum(log(dlnorm(x=data, meanlog = mu, sdlog = sigma)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.lnorm <- optim(fn = lllognormal,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.mu <- MLEs.lnorm$par[1]
hat.sigma <- MLEs.lnorm$par[2]
hat.mu
hat.sigma <- MLEs.lnorm$par[2]
hat.sigma
MLEs.lnorm
lnorm.loglikelihood <- -MLEs.lnorm$value
lnorm.loglikelihood
lnorm.loglikelihood
lnorm.loglikelihood
lnorm.loglikelihood <- (-MLEs.lnorm$value)
lnorm.loglikelihood
lnorm.loglikelihood <- MLEs.lnorm$value
lnorm.loglikelihood
lnorm.loglikelihood <- -MLEs.lnorm$value
lnorm.loglikelihood
Q <- weibull.loglikelihood/lnorm.loglikelihood
#######################################
# Part C: Compute the Likelihood Ratio
#######################################
weibull.loglikelihood <- -2166.496
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
Q <- weibull.loglikelihood/lnorm.loglikelihood
Q
#######################################
# Part D: Compute the Likelihood Ratio
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
Q2 <- gamma.loglikelihood/lnorm.loglikelihood
Q2
#######################################
# Part D: Compute the Likelihood Ratio
#######################################
weibull.loglikelihood <- -2166.496
gamma.loglikelihood <- -MLEs.gamma$value
Q2 <- gamma.loglikelihood/lnorm.loglikelihood
Q2
Q2 <- weibull.loglikelihood/gamma.loglikelihood
Q2
#######################################
# Part E: Compute the Likelihood Ratio
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- gamma.loglikelihood/lnorm.loglikelihood
Q3
?hat
table <- tibble(
`distribution` = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(hat(a)~"= 2.1871",
hat(a)~"= ", round(hat.alpha, 4),
hat(a)~"= ", round(hat.mu, 4)),
`parameter 2` = c(hat(u)~"= 2.1871",
hat(b)~"= ", round(hat.beta, 4),
hat(sigma)~"= ", round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(hat(a)~"= 2.1871",
hat(a)~"= ", round(hat.alpha, 4),
hat(a)~"= ", round(hat.mu, 4)),
`parameter 2` = c(hat(u)~"= 2.1871",
hat(b)~"= ", round(hat.beta, 4),
hat(sigma)~"= ", round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(hat(a)~"= 2.1871",
(hat(a)~"= ", round(hat.alpha, 4)),
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
table
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
table2
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
?exponentiate
#######################################
# Part C: Compute the Likelihood Ratio
#######################################
weibull.loglikelihood <- -2166.496
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
Q <- exp(weibull.loglikelihood-lnorm.loglikelihood)
#######################################
# Part D: Compute the Likelihood Ratio
#######################################
weibull.loglikelihood <- -2166.496
gamma.loglikelihood <- -MLEs.gamma$value
Q2 <- exp(weibull.loglikelihood-gamma.loglikelihood)
#######################################
# Part E: Compute the Likelihood Ratio
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- exp(gamma.loglikelihood - lnorm.loglikelihood)
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
Q
Q2
#######################################
# Part E: Compute the Likelihood Ratio
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- exp(gamma.loglikelihood - lnorm.loglikelihood)
Q3
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
view(table2)
#######################################
# Part C: Compute the Likelihood Ratio
# Weibull vs Gamma
#######################################
weibull.loglikelihood <- -2166.496
gamma.loglikelihood <- -MLEs.gamma$value
Q <- exp(weibull.loglikelihood-gamma.loglikelihood)
Q
#######################################
# Part D: Compute the Likelihood Ratio
# Weibull vs Log-Normal
#######################################
weibull.loglikelihood <- -2166.496
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
Q2 <- exp(weibull.loglikelihood-lnorm.loglikelihood)
Q2
#######################################
# Part E: Compute the Likelihood Ratio
# Gamma vs Log-Normal
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- exp(gamma.loglikelihood - lnorm.loglikelihood)
Q3
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
view(table2)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
table2
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
view(table2)
view(table)
hat.alpha <- MLEs.gamma$par[1]
hat.beta <- MLEs.gamma$par[2]
hat.alpha
hat.beta
#####################################
# Part A: Maximum Likelihood (Gamma)
#####################################
llgamma <- function(par, data, neg=F){
alpha <- par[1] # go from (-inf,inf) to (0,inf)
beta <- par[2] # go from (-inf,inf) to (0,inf)
ll <- sum(log(dgamma(x=data, shape=alpha, scale=beta)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.gamma <- optim(fn = llgamma,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.alpha <- MLEs.gamma$par[1]
hat.beta <- MLEs.gamma$par[2]
hat.alpha
hat.beta
#####################################
# Part A: Maximum Likelihood (Gamma)
#####################################
llgamma <- function(par, data, neg=F){
alpha <- exp(par[1]) # go from (-inf,inf) to (0,inf)
beta <- exp(par[2]) # go from (-inf,inf) to (0,inf)
ll <- sum(log(dgamma(x=data, shape=alpha, scale=beta)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.gamma <- optim(fn = llgamma,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.alpha <- MLEs.gamma$par[1]
hat.beta <- MLEs.gamma$par[2]
hat.alpha
hat.beta
#####################################
# Part A: Maximum Likelihood (Gamma)
#####################################
llgamma <- function(par, data, neg=F){
alpha <- exp(par[1]) # go from (-inf,inf) to (0,inf)
beta <- exp(par[2]) # go from (-inf,inf) to (0,inf)
ll <- sum(log(dgamma(x=data, shape=alpha, scale=beta)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.gamma <- optim(fn = llgamma,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.alpha <- exp(MLEs.gamma$par[1])
hat.beta <- exp(MLEs.gamma$par[2])
hat.alpha
hat.beta
#####################################
# Part B: Maximum Likelihood (Log-Normal)
#####################################
lllognormal <- function(par, data, neg=F){
mu <- par[1]
sigma <- exp(par[2])
ll <- sum(log(dlnorm(x=data, meanlog = mu, sdlog = sigma)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.lnorm <- optim(fn = lllognormal,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.mu <- MLEs.lnorm$par[1]
hat.sigma <- exp(MLEs.lnorm$par[2])
hat.mu
hat.sigma
#######################################
# Part C: Compute the Likelihood Ratio
# Weibull vs Gamma
#######################################
weibull.loglikelihood <- -2166.496
gamma.loglikelihood <- -MLEs.gamma$value
Q <- exp(weibull.loglikelihood-gamma.loglikelihood)
# Q = 2.161379e-07
#######################################
# Part D: Compute the Likelihood Ratio
# Weibull vs Log-Normal
#######################################
weibull.loglikelihood <- -2166.496
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
# get the log-likelihood
Q2 <- exp(weibull.loglikelihood-lnorm.loglikelihood)
# Q = 2.370668e+16
#######################################
# Part E: Compute the Likelihood Ratio
# Gamma vs Log-Normal
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- exp(gamma.loglikelihood - lnorm.loglikelihood)
# Q = 1.096831e+23
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
view(table2)
# Homework 9
# Caroline Devine
################################################################################
library(tidyverse)
library(nleqslv)
################################################################################
# Question 1
################################################################################
# Load Data
dat.precip <- read_csv(file = "agacis.csv")
# Clean Data
dat.precip.long <- dat.precip |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation))
library(e1071)
dat.precip.long |>
summarize(
mean = mean(Precipitation, na.rm=T),
sd = sd(Precipitation, na.rm=T),
min = min(Precipitation, na.rm=T),
max = max(Precipitation, na.rm=T),
skew = skewness(Precipitation, na.rm=T),
kurt = kurtosis(Precipitation, na.rm=T)
)
#####################################
# Part A: Maximum Likelihood (Gamma)
#####################################
llgamma <- function(par, data, neg=F){
alpha <- exp(par[1]) # need alpha greater than 0 bc alpha E R+
beta <- exp(par[2]) # need beta greater than 0 bc beta E R+
ll <- sum(log(dgamma(x=data, shape=alpha, scale=beta)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.gamma <- optim(fn = llgamma,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.alpha <- exp(MLEs.gamma$par[1])
hat.beta <- exp(MLEs.gamma$par[2])
#####################################
# Part B: Maximum Likelihood (Log-Normal)
#####################################
lllognormal <- function(par, data, neg=F){
mu <- par[1]
sigma <- exp(par[2]) # need sigma greater than 0 bc sigma E R+
ll <- sum(log(dlnorm(x=data, meanlog = mu, sdlog = sigma)), na.rm=T)
return(ifelse(neg, -ll, ll))
}
MLEs.lnorm <- optim(fn = lllognormal,
par = c(1,1),
data = dat.precip.long$Precipitation,
neg=T)
hat.mu <- MLEs.lnorm$par[1]
hat.sigma <- exp(MLEs.lnorm$par[2])
#######################################
# Part C: Compute the Likelihood Ratio
# Weibull vs Gamma
#######################################
weibull.loglikelihood <- -2166.496
gamma.loglikelihood <- -MLEs.gamma$value
Q <- exp(weibull.loglikelihood-gamma.loglikelihood)
Q
#######################################
# Part D: Compute the Likelihood Ratio
# Weibull vs Log-Normal
#######################################
weibull.loglikelihood <- -2166.496
lnorm.loglikelihood <- -MLEs.lnorm$value # needs to be negative to
Q2 <- exp(weibull.loglikelihood-lnorm.loglikelihood)
Q2
#######################################
# Part E: Compute the Likelihood Ratio
# Gamma vs Log-Normal
#######################################
gamma.loglikelihood <- -MLEs.gamma$value
lnorm.loglikelihood <- -MLEs.lnorm$value
Q3 <- exp(gamma.loglikelihood - lnorm.loglikelihood)
Q3
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(2.1871,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
table <- tibble(
distribution = c("Weibull", "Gamma", "Log-Normal"),
`parameter 1` = c(2.1871,
round(hat.alpha, 4),
round(hat.mu, 4)),
`parameter 2` = c(3.9683,
round(hat.beta, 4),
round(hat.sigma, 4)),
`log-likelihood` = c( -2166.496,
-MLEs.gamma$value,
-MLEs.lnorm$value)
)
view(table)
table2 <- tibble(
distribution = c("Weibull vs Gamma",
"Weibull vs Log-Normal",
"Gamma vs Log-Normal"),
`Likelihood Ratio` = c(Q,
Q2,
Q3)
)
view(table2)
MLEs.lnorm
view(table)
view(table2)
